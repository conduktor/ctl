apiVersion: v2
kind: Group
metadata:
  name: app-grp-grp-1-54770
spec:
  displayName: app-grp-grp-1-54770
  description: desc
  members: []
---
apiVersion: v2
kind: Group
metadata:
  name: app-grp-grp-2-54770
spec:
  displayName: app-grp-grp-2-54770
  description: desc
  members: []
---
apiVersion: v1
kind: Application
metadata:
  name: app-grp-app-1-54770
spec:
  title: App Group One 54770
  owner: app-grp-grp-1-54770
---
apiVersion: v1
kind: Application
metadata:
  name: app-grp-app-2-54770
spec:
  title: App Group Two 54770
  owner: app-grp-grp-2-54770
---
apiVersion: v1
kind: ApplicationInstance
metadata:
  application: app-grp-app-1-54770
  name: app-grp-inst-1-54770
spec:
  cluster: '1080'
  serviceAccount: app-grp-acc-1-54770
  resources:
    - type: TOPIC
      name: app-grp-app1-top-1-54770
      patternType: LITERAL
    - type: TOPIC
      name: app-grp-app1-top-2-54770
      patternType: LITERAL
    - type: SUBJECT
      name: app-grp-app1-top-1-54770-key
      patternType: LITERAL
    - type: CONSUMER_GROUP
      name: app-54770-grp-cons-54770
      patternType: PREFIXED
    - type: CONNECTOR
      name: connector54770-x-54770
      connectCluster: kafka-connect
      patternType: PREFIXED
---
apiVersion: v1
kind: ApplicationInstance
metadata:
  application: app-grp-app-2-54770
  name: app-grp-inst-2-54770
spec:
  cluster: '1080'
  serviceAccount: app-grp-acc-2-54770
  resources:
    - type: TOPIC
      name: app-grp-app2-top-1-54770
      patternType: LITERAL
---
apiVersion: v1
kind: ApplicationInstance
metadata:
  application: app-grp-app-2-54770
  name: not-allowed-instance-54770
spec:
  cluster: '1080'
  serviceAccount: notservacc-54770
  resources: []
---
apiVersion: v1
kind: ApplicationInstancePermission
metadata:
  application: app-grp-app-2-54770
  appInstance: app-grp-inst-2-54770
  name: app-grp-inst-2-perm-54770
spec:
  resource:
    type: TOPIC
    name: app-grp-app2-top-1-54770
    patternType: LITERAL
  permission: READ
  grantedTo: app-grp-inst-1-54770
---
apiVersion: v2
kind: Topic
metadata:
  cluster: '1080'
  name: app-grp-app1-top-1-54770
spec:
  replicationFactor: 1
  partitions: 3
  configs:
    min.insync.replicas: '1'
    cleanup.policy: delete
    retention.ms: '60000'
---
apiVersion: v2
kind: Topic
metadata:
  cluster: '1080'
  name: app-grp-app1-top-2-54770
spec:
  replicationFactor: 1
  partitions: 3
  configs:
    min.insync.replicas: '1'
    cleanup.policy: delete
    retention.ms: '60000'
---
apiVersion: v2
kind: Topic
metadata:
  cluster: '1080'
  name: app-grp-app2-top-1-54770
spec:
  replicationFactor: 1
  partitions: 3
  configs:
    min.insync.replicas: '2'
    cleanup.policy: delete
    retention.ms: '60000'
---
apiVersion: v2
kind: Subject
metadata:
  cluster: '1080'
  name: app-grp-app1-top-1-54770-key
spec:
  schema: >-
    syntax = "proto3";message recordName {int32 id = 1;string createdAt =
    2;string name = 3;}
  format: PROTOBUF
  compatibility: BACKWARD
---
apiVersion: v2
kind: Subject
metadata:
  cluster: '1080'
  name: app-grp-app1-top-2-54770-value
spec:
  schema: |-
    {
          "type": "record",
          "name": "AvroKey",
          "namespace": "com.mycompany",
          "fields": [
            {
              "name": "id",
              "type": "long"
            }
          ]
        }
  format: AVRO
  compatibility: BACKWARD
---
apiVersion: kafka/v2
kind: Connector
metadata:
  name: connector-x-test-54770
  cluster: '1080'
  connectCluster: kafka-connect
  autoRestart:
    enabled: true
    frequencySeconds: 600
spec:
  config:
    connector.class: org.apache.kafka.connect.tools.MockSourceConnector
    tasks.max: '1'
    topic: app-grp-app1-top-1-54770
